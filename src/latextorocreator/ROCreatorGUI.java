/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/*
 * Copyright 2012-2013 Ontology Engineering Group, Universidad Polit√©cnica de Madrid, Spain
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package latextorocreator;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Daniel Garijo
 */
public class ROCreatorGUI extends javax.swing.JFrame {
    boolean loadLatexFileEnabled;

    /** Creates new form ROCreatorForm */
    public ROCreatorGUI() {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();

        // Determine the new location of the window
        int w = this.getSize().width;
        int h = this.getSize().height;
        int x = (dim.width-w)/2;
        int y = (dim.height-h)/2;

        // Move the window
        this.setLocation(x, y);
        loadLatexFileEnabled = false;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGenerateRO = new javax.swing.JButton();
        loadLatexFile = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaCreators = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        textFieldPath = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RO Creator");
        setIconImages(null);
        setName("RO creator"); // NOI18N
        setResizable(false);

        buttonGenerateRO.setText("Generate Research Object!");
        buttonGenerateRO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGenerateROActionPerformed(evt);
            }
        });

        loadLatexFile.setText("Load abstract and title from LaTeX file");
        loadLatexFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadLatexFileActionPerformed(evt);
            }
        });

        jTextAreaCreators.setColumns(20);
        jTextAreaCreators.setRows(5);
        jScrollPane1.setViewportView(jTextAreaCreators);

        jLabel1.setText("Insert RO creators (one per line)");

        textFieldPath.setEditable(false);
        textFieldPath.setText("Path to LaTeX file");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loadLatexFile)
                    .addComponent(textFieldPath, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(buttonGenerateRO, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loadLatexFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonGenerateRO)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadLatexFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadLatexFileActionPerformed
        if(!loadLatexFileEnabled){
            JFileChooser chooser = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("TEX files", "tex");
            chooser.setFileFilter(filter);
            chooser.setDialogTitle("Choose a LaTeX file to extract title and abstract");            
            int returnVal = chooser.showOpenDialog(this);
            if(returnVal == JFileChooser.APPROVE_OPTION) {
               textFieldPath.setText(chooser.getSelectedFile().getAbsolutePath());
//               if(new File(textFieldPath.getText()).isDirectory()){
//                   JOptionPane.showMessageDialog(this,"You must sele");
//               }
               loadLatexFileEnabled = true;
               loadLatexFile.setSelected(true);
            }else{
               loadLatexFile.setSelected(false);
            }
        }else{
            loadLatexFileEnabled = false;
            loadLatexFile.setSelected(false);
            loadLatexFile.setText("Path to LaTeX file");
        }        
        
    }//GEN-LAST:event_loadLatexFileActionPerformed

    private void buttonGenerateROActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGenerateROActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("Choose a folder for saving your Research Object");            
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = chooser.showSaveDialog(this);        
        ArrayList<String> creators = new ArrayList<String>();
        if(returnVal == JFileChooser.APPROVE_OPTION) {           
               System.out.println();
               //llamar al resto aqui.
               try{
                   //retrieve the creators
                   String[] creatorsText = jTextAreaCreators.getText().split("\n");                   
                   creators.addAll(Arrays.asList(creatorsText));
                   if(loadLatexFileEnabled){
                        new ROCreator().createRO(chooser.getSelectedFile().getAbsolutePath(), textFieldPath.getText(), creators);
                   }else{
                       new ROCreator().createRO(chooser.getSelectedFile().getAbsolutePath(), null, creators);
                   }
                   JOptionPane.showMessageDialog(this, "Research Object created successfully");
               }catch(Exception e){
                   System.err.println("Error while generating the Research Object: "+e.getMessage());
               }
        }
    }//GEN-LAST:event_buttonGenerateROActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ROCreatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ROCreatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ROCreatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ROCreatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ROCreatorGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonGenerateRO;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaCreators;
    private javax.swing.JCheckBox loadLatexFile;
    private javax.swing.JTextField textFieldPath;
    // End of variables declaration//GEN-END:variables
}
